class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        initial.sort()
        parent = [i for i in range(n)]
        size = [1] * n

        def find(x):
            if x != parent[x]:
                parent[x] = find(parent[x])
            return parent[x]
        
        def union(x, y):
            px, py = find(x), find(y)

            if px != py:
                if size[px] < size[py]:
                    parent[px] = py
                    size[py] += size[px]
                else:
                    parent[py] = px
                    size[px] += size[py]
        for i in range(n):
            for j in range(i+1,n):
                if graph[i][j] == 1:
                    union(i,j)
        
        comp_count = [0] * n
        

        for node in initial:
            comp_count[find(node)] += 1
        
        
        save_count = -1
        result = min(initial)

        for node in initial:
            root = find(node)
            if comp_count[root] == 1:
                if size[root] > save_count:
                    save_count = size[root]
                    result = node
        
        return result
